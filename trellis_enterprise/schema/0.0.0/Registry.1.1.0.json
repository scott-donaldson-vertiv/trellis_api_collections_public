{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Registry.1.1.0",
  "type": "object",
  "additionalProperties": true,
  "properties": {
    "id": {
      "type": "string",
      "description": "The globally unique id of this resource.",
      "readonly": true
    },
    "category": {
      "type": "string",
      "enum": [
        "Globals",
        "Instances",
        "Classes"
      ],
      "description": "Scope category of the registry.",
      "readonly": true
    },
    "key": {
      "type": "string",
      "description": "The key of the registry.Example rest.api.uom."
    },
    "instanceId": {
      "type": "string",
      "description": "The id of the instance. Required when category is INSTANCES.",
      "readonly": true
    },
    "ownerTenantId": {
      "type": "string",
      "description": "The tenant name that owns the resource or null if the owner is the super tenant."
    },
    "tenantIds": {
      "type": "array",
      "description": "List of tenant names that this resource is shared to.",
      "items": {
        "type": "string",
        "description": "The tenant name that this resource is shared to."
      }
    },
    "sharedTenancyOption": {
      "type": "string",
      "enum": [
        "SHARED",
        "ALL",
        "NONE"
      ],
      "description": "Specify different shared tenancy options."
    },
    "type": {
      "type": "string",
      "description": "The type classifier. Required when category is INSTANCES or CLASSES. Example: type = user.",
      "readonly": true
    },
    "entryType": {
      "type": "string",
      "enum": [
        "String",
        "Long",
        "Integer",
        "Float",
        "BigDecimal",
        "Date",
        "Character",
        "Clob"
      ],
      "description": "The type of the value for the registry.",
      "readonly": true
    },
    "entryValue": {
      "type": "string",
      "description": "The value of the registry. It supports json format with entryType String.",
      "readonly": true
    },
    "encrypted": {
      "type": "boolean",
      "description": "Whether or not the value needs to be saved encrypted."
    },
    "_links": {
      "type": "object",
      "description": "Hypermedia (HAL) links to self and other resources.",
      "readonly": true,
      "properties": {
        "self": {
          "description": "Hypermedia self link.",
          "type": "string",
          "format": "uri"
        }
      },
      "required": [
        "self"
      ]
    }
  },
  "required": [
    "_links"
  ]
}